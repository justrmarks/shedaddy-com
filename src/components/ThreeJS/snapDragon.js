// Auto-generated by https://github.com/react-spring/gltfjsx

import React, { useRef, Suspense} from 'react'
import { useLoader } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import ThreeErrorBoundry from './ThreeErrorBoundry'

function Box(props) {
  const mesh = useRef();
  return (
    <mesh {...props} ref={mesh}>
      <boxBufferGeometry attach="geometry" args={[1, 1, 1]} />
      <meshStandardMaterial attach="material" color={'hotpink'} />
    </mesh>
  )
}

export default function Snapdragon(props) {
  const group = useRef()
  const { nodes, materials } = useLoader(GLTFLoader, './ThreeJS/assets/snapdragon-gltf/snapdragon.gltf')

  return (
    <ThreeErrorBoundry>
      <Suspense fallback={<Box />}>
      <group ref={group} {...props} dispose={null}>
        <scene name="OSG_Scene">
          <group name="RootNode_(gltf_orientation_matrix)" rotation={[-Math.PI / 2, 0, 0]}>
            <group name="RootNode_(model_correction_matrix)">
              <group name="snapdragonobjcleanermaterialmergergles">
                <mesh material={materials['lambert2SG']} geometry={nodes[''].geometry} />
              </group>
            </group>
          </group>
        </scene>
      </group>
      </Suspense>
    </ ThreeErrorBoundry>
  )
}
